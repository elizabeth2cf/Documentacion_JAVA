/*
    JFrame es una clase (de la biblioteca gráfica "Swing") 
    que se utiliza en java para generar ventanas.-
 */
package parcial2_belizkaren;

import java.util.ArrayList;
import java.util.Date;
import java.util.TreeMap;

/**
 *
 * @author Usuario
 */
public class JFrame extends javax.swing.JFrame {

    /**
     * Creates new form jFrame
     */
    public JFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ejercicio2 = new javax.swing.JButton();
        ejercicio3 = new javax.swing.JButton();
        ejercicio4 = new javax.swing.JButton();
        ejercicio5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ejercicio2.setText("ejercicio2");
        ejercicio2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ejercicio2ActionPerformed(evt);
            }
        });

        ejercicio3.setText("ejercicio3");
        ejercicio3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ejercicio3ActionPerformed(evt);
            }
        });

        ejercicio4.setText("ejercicio4");
        ejercicio4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ejercicio4ActionPerformed(evt);
            }
        });

        ejercicio5.setText("ejercicio5");
        ejercicio5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ejercicio5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ejercicio2)
                    .addComponent(ejercicio5)
                    .addComponent(ejercicio4)
                    .addComponent(ejercicio3))
                .addContainerGap(265, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(ejercicio2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ejercicio3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ejercicio4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ejercicio5)
                .addContainerGap(94, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ejercicio2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ejercicio2ActionPerformed
        //Instancias profecionales
        Profesional prof1 = new Profesional(01, "Week", "John", new Date(1989, 04, 03), 4290, new TreeMap<Integer, Especialidad>());
        Profesional prof2 = new Profesional(02, "DiMacio","Casia", new Date(1987, 07, 02), 4291, new TreeMap<Integer, Especialidad>());

        //Instancias pacientes
        Paciente pac1 = new Paciente(01, "Lopez", "Marcos", new Date(1999, 04, 04), 413344, "Calle 123", "2323445566", "LP", true);
        Paciente pac2 = new Paciente(02, "Cardenas", "Ana", new Date(1997, 02, 04), 223344, "Calle 123", "2323445566", "LP", true);
        Paciente pac6 = new Paciente(06, "Perez", "Sofía", new Date(1997, 05, 11), 443344, "Calle 123", "2323445566", "LP", true);
        
        //Instancias turnos
        Turno turno1 = new Turno();
        turno1.setFechaTurno(new Date(2023, 3, 1));
        turno1.setPaciente(pac1);
        
        
        Turno turno2 = new Turno();
        turno2.setFechaTurno(new Date(2023, 9, 12));
        turno2.setPaciente(pac2);
        
        Turno turno3 = new Turno();
        turno3.setFechaTurno(new Date(2023, 9, 12));
        turno3.setPaciente(pac6);
        
        //Instancias especialidades
        Especialidad esp1 = new Especialidad();
        esp1.setId(191);
        esp1.setNombre("Radiología");
        Especialidad esp2 = new Especialidad();
        esp2.setId(02);
        esp2.setNombre("Traumatología");
        Especialidad esp3 = new Especialidad();
        esp3.setId(03);
        esp3.setNombre("Pediatría");      

        //Instancias turnos
        prof1.agendarTurno(esp1, turno3);
        prof1.agendarTurno(esp1, turno2);
        
        prof2.agendarTurno(esp2, turno1);
        
        //Instancia de una lista de Especialidades
        ArrayList<Especialidad> listaEspe=new ArrayList();
        
        //Agrego profecionales a la lista
        listaEspe.add(esp1);
        listaEspe.add(esp2);
        listaEspe.add(esp3);
        
        
        int id_buscar = esp1.getId();//busca por id
        
        //Recorre cada especialidad dentro de la lista especialidades imprime turnos por especialidad
        for(int i=0;i<listaEspe.size();i++){ 
            Especialidad espe = listaEspe.get(i);
            if(espe.getTurnos().size()>0 && espe.getId()==id_buscar){
                for(int it=0;it<espe.getTurnos().size();it++){
                    Turno t = espe.getTurnos().get(it);
                    Date dia = new Date(2023, 9, 12);
                  
                    if(dia.equals(t.getFechaTurno())){ 
                        System.out.println("\nEspecialidad: "+espe.getNombre()+"\nNroTurno: "+t.getNro() + "\nPaciente:" + t.getPaciente().toString());
                    }
                }
            }
        } 
    }//GEN-LAST:event_ejercicio2ActionPerformed

    private void ejercicio3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ejercicio3ActionPerformed

        //Instancias profecionales
        Profesional prof1 = new Profesional(01, "Kepler", "Luiz", new Date(1989, 04, 03), 4290, 
                new TreeMap<Integer, Especialidad>());
        Profesional prof2 = new Profesional(02, "Torres","Santiago", new Date(1987, 07, 02), 4291, 
                new TreeMap<Integer, Especialidad>());

        //Instancias pacientes
        Paciente pac1 = new Paciente(01, "Alvarez", "Mario", new Date(1999, 04, 04), 413344, "Calle 123", "2323445566", "LP", true);
        Paciente pac2 = new Paciente(02, "Garmendia", "Ema", new Date(1997, 02, 04), 223344, "Calle 123", "2323445566", "LP", true);
        Paciente pac6 = new Paciente(06, "Perez", "Sofía", new Date(1997, 05, 11), 443344, "Calle 123", "2323445566", "LP", true);
        
        //Instancias turnos
        Turno turno1 = new Turno();
        turno1.setFechaTurno(new Date(2023, 3, 1));
        turno1.setPaciente(pac1);
        
        Turno turno2 = new Turno();
        turno2.setFechaTurno(new Date(2023, 9, 12));
        turno2.setPaciente(pac2);
        
        Turno turno3 = new Turno();
        turno3.setFechaTurno(new Date(2023, 9, 12));
        turno3.setPaciente(pac6);
        
        //Instancias especialidades
        Especialidad esp1 = new Especialidad();
        esp1.setId(191);
        esp1.setNombre("Radiología");
        Especialidad esp2 = new Especialidad();
        esp2.setId(02);
        esp2.setNombre("Traumatología");
        Especialidad esp3 = new Especialidad();
        esp3.setId(03);
        esp3.setNombre("Pediatría"); 
        
        //Genero turnos
        prof1.agendarTurno(esp1, turno1);
        prof1.agendarTurno(esp1, turno2);
        
        prof2.agendarTurno(esp2, turno3);
        
        //Instancia de una lista de profesionales
        ArrayList<Profesional> listaProf = new ArrayList();
        //Agrego profecionales a la lista
        listaProf.add(prof1);
        listaProf.add(prof2);
        
        //Tomo a cada profecional y muestra a quien sea responsable de los turnos de Radiología
        //imprime todos sus datos.
        
        for(int indexp=0;indexp<listaProf.size();indexp++){
            Profesional prof = listaProf.get(indexp);
            prof.listarTurnosPorEspecialidad();
        }
            
            
    }//GEN-LAST:event_ejercicio3ActionPerformed

    private void ejercicio4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ejercicio4ActionPerformed

        /*
        Creé una lista mpara guardar objetos paciente.
        Creé Objetos pacientes.    
        */ 
        ArrayList<Paciente> pacientes = new ArrayList<>();
        
        
        Paciente paciente2 = new Paciente(8001, "Giordano", "Pablo", new Date(1957, 3, 4),
            20422130, "Barrio Nuevo", "TEL:451xxxxxx", "INSSSEP", false);
        
        Paciente paciente3 = new Paciente(7001, "Alonzo", "Carla", new Date(1957, 6, 8),
            15778839, "calle 129", "CAL:51xxxxxx", "INSSSEP", true);
        
        Paciente paciente4 = new Paciente(8401, "Goi", "Pedro", new Date(1954, 5, 8), 
                23909973, "P. SOL", "CEL:15xxxxxx", "INSSSEP", true);
        
        //agrego los pacientes a la lista 
        pacientes.add(paciente2);
        pacientes.add(paciente3);
        pacientes.add(paciente4);
        
        
        //Recorremos la lista y compáramos si están activos y tienen la obra social INSSSEP se muestran.
        for(int i=0;i<pacientes.size();i++){
            if(pacientes.get(i).isActivo() && "INSSSEP".equals(pacientes.get(i).getObraSocial()) ){
                System.out.println("----------------------------------------------");
                Date fec_nac = pacientes.get(i).getFechaNacimiento();
                int anio_paciente = fec_nac.getYear();
                int edad = 2023 - anio_paciente;
                if( edad >= 65){
                    System.out.println("Edad del pasiente: " + edad);
                    System.out.println("Paciente: "+ pacientes.get(i).toString()+"\nObra Social: "+pacientes.get(i).getObraSocial());
           
                }
            }
        }
    }//GEN-LAST:event_ejercicio4ActionPerformed

    private void ejercicio5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ejercicio5ActionPerformed
        //Lista para guardar objetos 
        ArrayList<Recurso> recursos = new ArrayList<>();
        //Instancio y guardo objetos en la lista
        recursos.add( new Recurso(0, "computadora", "electronica", "32 pulgadas, gris, W10"));
        recursos.add( new Recurso(1, "silla", "mueble de oficina", "ploastico"));
        recursos.add( new Recurso(2, "escritorio", "mueble de oficina", "madera, marrón"));
        recursos.add( new Recurso(3, "camilla", "mueble de dormitorio", "Dos Plazas"));
        recursos.add( new Recurso(4, "camilla", "mueble de dormitorio", "Una plaza"));
        recursos.add( new Recurso(5, "camilla", "mueble de dormitorio", "Una plaza"));
        recursos.add( new Recurso(6, "computadora", "electronica", "32 pulgadas, negro, W10"));
        recursos.add( new Recurso(7, "televisor", "electronica", "42 pulgadas, negro"));
        recursos.add( new Recurso(8, "escritorio", "mueble de oficina", "metal, blanco"));
        recursos.add( new Recurso(9, "silla", "mueble", "madera, marrón"));
        
        int contTv = 0;
        int contCam1 = 0;
  
        /*Recorre la lista declarada al inicio, cuenta: camilas y televisor*/
        for(int i  = 0; i < recursos.size(); i++){
            if(recursos.get(i).getNombre() == "camilla" && recursos.get(i).getDescripcion() == "Una plaza"){
                contCam1 +=1;                 
            }
            if(recursos.get(i).getNombre() == "televisor"){
                contTv +=1;
            }
        }
        System.out.println("En el edificio hay: ");
        System.out.println("Hay " + contCam1 +" cama/s de una plaza.");
        System.out.println("Hay " + contTv +" televisor/es.");
        
    
    }//GEN-LAST:event_ejercicio5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ejercicio2;
    private javax.swing.JButton ejercicio3;
    private javax.swing.JButton ejercicio4;
    private javax.swing.JButton ejercicio5;
    // End of variables declaration//GEN-END:variables
}
